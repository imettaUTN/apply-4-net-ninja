@model ninja.Models.InvoiceViewModels
@{
    ViewBag.Title = "Registrar";
}

<h2 class="page-header">New Invoice</h2>

@using (Html.BeginForm("Create", "Invoice", FormMethod.Post, new { id = "frm-comprobante" }))
{
    <div class="row">
        <div class="col-xs-12">

            <div class="form-group">
                <div class="row">
                    <div class="col-xs-2">
                        @Html.Label("#Invoice")
                        @Html.TextBoxFor(x => x.InvoiceId, new { @class = "form-control", placeholder = "Ingrese el numero de invoice", @onchange = "ValidarInputs();" })
                    </div>
                    <div class="col-xs-2">
                        @Html.Label("Type")
                        @Html.TextBoxFor(x => x.Type, new { @class = "form-control", placeholder = "Ingrese el Type", @onchange = "ValidarInputs();" })
                        @Html.ValidationMessage("Type", null, new { @class = "label label-danger" })
                    </div>
                </div>
            </div>

            <div class="well well-sm">
                <div class="row">
                    <div class="col-xs-7" id="DescriptionDetalle">
                        @Html.TextBoxFor(x => x.DetailDescription, new { style = "width:500px;max-width: 500px;", @class = "form-control", placeholder = "Description", id = "DetalleInvoice", @onchange = "ValidarInputs();" })
                    </div>
                    <div class="col-xs-2">
                        @Html.TextBoxFor(x => x.DetailCount, new { @class = "form-control", placeholder = "Amount", @onchange = "ValidarInputs();" })
                    </div>
                    <div class="col-xs-2">
                        <div class="input-group">
                            <span class="input-group-addon" id="basic-addon1">$</span>
                            @Html.TextBoxFor(x => x.DetailPrice, new { @class = "form-control", placeholder = "Price", @onchange = "ValidarInputs();" })
                        </div>
                    </div>
                    <div class="col-xs-1">
                        <button class="btn btn-primary" id="btnAgregarInvoice" type="submit" value="agregarItemInvoice" name="action">
                            <i class="glyphicon glyphicon-plus"></i>
                        </button>
                    </div>
                </div>
            </div>

            <hr />

            <ul id="invoicedor-detalle" class="list-group">
                @if (Model.InvoiceDetail.Count > 0)
                {
                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-xs-1"></div>
                            <div class="col-xs-5">
                                <b>Invoice</b>
                            </div>
                            <div class="col-xs-2 text-center">
                                <b>Amount</b>
                            </div>
                            <div class="col-xs-2 text-right">
                                <b>Price Unitario</b>
                            </div>
                            <div class="col-xs-2 text-right">
                                <b>Monto</b>
                            </div>
                        </div>
                    </li>
                }
                @foreach (var d in Model.InvoiceDetail)
                {
                    var i = Model.InvoiceDetail.IndexOf(d);
                    <li class="list-group-item">
                        <!-- Modelo -->
                        @Html.Hidden("InvoiceDetail[" + i + "].DetailID", d.DetailID)
                        @Html.Hidden("InvoiceDetail[" + i + "].InvoiceId", d.InvoiceId)
                        @Html.Hidden("InvoiceDetail[" + i + "].Description", d.Description)
                        @Html.Hidden("InvoiceDetail[" + i + "].UnitPrice", d.UnitPrice)
                        @Html.Hidden("InvoiceDetail[" + i + "].Amount", d.Amount)
                        @Html.Hidden("InvoiceDetail[" + i + "].RemoveItem", d.RemoveItem, new { @class = "retirar" })

                        <div class="row">
                            <div class="col-xs-1 text-right">
                                <button class="btn btn-danger btn-xs btn-block btn-retirar" type="submit" value="retirarInvoice" name="action">
                                    <i class="glyphicon glyphicon-remove"></i>
                                </button>
                            </div>
                            <div class="col-xs-5">
                                @d.Description
                            </div>
                            <div class="col-xs-2 text-center">
                                @d.Amount
                            </div>
                            <div class="col-xs-2 text-right">
                                @string.Format("{0:c}", d.UnitPrice)
                            </div>
                            <div class="col-xs-2 text-right">
                                @string.Format("{0:c}", d.PriceWithTaxes())
                            </div>
                        </div>
                    </li>
                }
                @if (Model.InvoiceDetail.Count > 0)
                {
                    <li class="list-group-item text-right" style="font-size:18px;">
                        @string.Format("{0:c}", Model.Total())
                    </li>
                }
            </ul>

            @if (Model.InvoiceDetail.Count > 0)
            {
                <button class="btn btn-primary btn-block btn-lg" type="submit" value="generarInvoice" name="action">Generar comprobante</button>
            }
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Index")
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            LimpiarAgregarProducto();
            $(".btn-retirar").click(function () {
                if (confirm('¿Está seguro de retirar el item seleccionado?')) {
                    $(this).closest('.list-group-item').find('.retirar').val("True");
                    return true;
                }

                return false;
            })
        })
        $("#InvoiceId").on('input', function (e) {
            if (!/^[\d]*$/i.test(this.value)) {
                this.value = this.value.replace(/[^\d]+/ig, "");
            }
        });

        function ValidarInputs() {
            var valueToValid = $("#DetalleInvoice").val();
            if ($("#InvoiceId").val() == '') {
                alert("Ingrese numero invoice");
                $("#btnAgregarInvoice").attr("disabled", true);
            }
            else {
                $("#btnAgregarInvoice").attr("disabled", false);
            }
            if ($("#Type").val() == '') {
                alert("Ingrese tipo invoice");
                $("#btnAgregarInvoice").attr("disabled", true);
            }
            else {
                $("#btnAgregarInvoice").attr("disabled", false);
            }
            $("#invoicedor-detalle li").each(function (indice) {
                if (indice > 0) {
                    var i = indice - 1;
                    if ($("#InvoiceDetail_" + i + "__Description").val() == valueToValid) {
                        alert("La Description " + valueToValid + " ya fue ingresada");
                        $("#btnAgregarInvoice").attr("disabled", true);
                    }
                    else {
                        $("#btnAgregarInvoice").attr("disabled", false);
                    }
                }
            });

        }
        function LimpiarAgregarProducto() {
            $("#CabeceraProductoId").val("");
            $("#DetalleInvoice").val("");
            $("#DetailPrice").val("");
            $("#DetailCount").val(1);
        }

    </script>
}
